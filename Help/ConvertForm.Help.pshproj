<?xml version="1.0"?>
<ModuleObject xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Name>ConvertForm</Name>
  <ModuleType>Script</ModuleType>
  <Version>0.0</Version>
  <Description />
  <ModuleClass>External</ModuleClass>
  <ModulePath>G:\PS\ConvertForm\ConvertForm.psm1</ModulePath>
  <UseSupports>false</UseSupports>
  <OverridePostCount>false</OverridePostCount>
  <FetchPostCount xsi:nil="true" />
  <Cmdlets>
    <CmdletObject>
      <Name>Convert-Form</Name>
      <Verb>Convert</Verb>
      <Noun>Form</Noun>
      <GeneralHelp>
        <Synopsis>Converti un fichier Winform (xxx.Designer.cs) en un script PowerShell.</Synopsis>
        <Description>Ce script permet de convertir un fichier CSharp contenant les déclarations d'une WinForm en un script PowerShell. 
La construction d'une fenêtre dans Visual Studio génère un fichier nommé NomDuFichier.Designer.cs.
C'est ce fichier qui constitue la source de ce script, on en extrait les lignes de déclaration des composants insérés sur la fenêtre de votre projet Winform. 
Si votre projet contient plusieurs Formulaires, vous devrez exécuter ce script pour chacune d'entre elles.

Si dans Visual Studio vous déclarez des événements spécifiques pour chaque composant, ce script construira une fonction pour chacun de ces événements. Le code C# contenu dans le corps de la méthode n'est pas converti.  

L'usage de certains composants graphique nécessite le modèle de thread STA, celui-ci peut être modifié à l'aide du paramètre -STA de Powershell.exe.</Description>
        <Notes />
        <ReturnType>System.IO.FileInfo</ReturnType>
        <ReturnTypeDescription>Si le switch -Passthru est précisé, sinon ne renvoi aucune donnée. </ReturnTypeDescription>
      </GeneralHelp>
      <Syntax>
        <string>Convert-Form [-Path] &lt;String&gt; [[-Destination] &lt;PSObject&gt;] [[-DestinationLiteral] &lt;PSObject&gt;] [[-Encoding] &lt;String&gt; {unknown | string | unicode | bigendianunicode | utf8 | utf7 | utf32 | ascii | default | oem} ] [-Force] [-HideConsole] [-asFunction] [-Secondary] [-Passthru]</string>
        <string>Convert-Form [-LiteralPath] &lt;String&gt; [[-Destination] &lt;PSObject&gt;] [[-DestinationLiteral] &lt;PSObject&gt;] [[-Encoding] &lt;String&gt; {unknown | string | unicode | bigendianunicode | utf8 | utf7 | utf32 | ascii | default | oem} ] [-Force] [-HideConsole] [-asFunction] [-Secondary] [-Passthru]</string>
      </Syntax>
      <Parameters>
        <ParameterDescription>
          <Name>Path</Name>
          <Type>String</Type>
          <AcceptsArray>false</AcceptsArray>
          <Mandatory>true</Mandatory>
          <Dynamic>false</Dynamic>
          <RemainingArgs>false</RemainingArgs>
          <Pipeline>true</Pipeline>
          <PipelinePropertyName>false</PipelinePropertyName>
          <Positional>true</Positional>
          <Position>0</Position>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullOrEmptyAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Spécifie le chemin d’accès à un élément. Les caractères génériques sont autorisés.</Description>
          <Globbing>true</Globbing>
        </ParameterDescription>
        <ParameterDescription>
          <Name>Destination</Name>
          <Type>PSObject</Type>
          <AcceptsArray>false</AcceptsArray>
          <Mandatory>false</Mandatory>
          <Dynamic>false</Dynamic>
          <RemainingArgs>false</RemainingArgs>
          <Pipeline>false</Pipeline>
          <PipelinePropertyName>true</PipelinePropertyName>
          <Positional>true</Positional>
          <Position>1</Position>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Spécifie le chemin d’accès du répertoire contenant le script généré. Les caractères génériques sont autorisés.
Si ce paramètre n'est pas précisé, le répertoire de destination sera celui contenant le fichier à convertir.</Description>
          <Globbing>true</Globbing>
        </ParameterDescription>
        <ParameterDescription>
          <Name>DestinationLiteral</Name>
          <Type>PSObject</Type>
          <AcceptsArray>false</AcceptsArray>
          <Mandatory>false</Mandatory>
          <Dynamic>false</Dynamic>
          <RemainingArgs>false</RemainingArgs>
          <Pipeline>false</Pipeline>
          <PipelinePropertyName>true</PipelinePropertyName>
          <Positional>true</Positional>
          <Position>1</Position>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Spécifie le chemin d’accès du répertoire contenant le script généré. Contrairement à Destination, la valeur de DestinationLiteral est utilisée exactement telle que vous la tapez. Aucun caractère n’est interprété en tant que caractère générique. Si le chemin d’accès inclut des caractères d’échappement, mettez-le entre des guillemets simples. Les guillemets simples indiquent à Windows PowerShell qu’aucun caractère ne doit être interprété en tant que séquence d’échappement.
Si ce paramètre n'est pas précisé, le répertoire de destination sera celui contenant le fichier à convertir.</Description>
          <Globbing>false</Globbing>
        </ParameterDescription>
        <ParameterDescription>
          <Name>Encoding</Name>
          <Type>String</Type>
          <AcceptsArray>false</AcceptsArray>
          <Mandatory>false</Mandatory>
          <Dynamic>false</Dynamic>
          <RemainingArgs>false</RemainingArgs>
          <Pipeline>false</Pipeline>
          <PipelinePropertyName>false</PipelinePropertyName>
          <Positional>true</Positional>
          <Position>2</Position>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateSetAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Consulter l'aide du provider FileSystem, section PARAMÈTRES DYNAMIQUES : Get-Help FileSystem</Description>
          <Globbing>false</Globbing>
        </ParameterDescription>
        <ParameterDescription>
          <Name>Force</Name>
          <Type>SwitchParameter</Type>
          <AcceptsArray>false</AcceptsArray>
          <Mandatory>false</Mandatory>
          <Dynamic>false</Dynamic>
          <RemainingArgs>false</RemainingArgs>
          <Pipeline>false</Pipeline>
          <PipelinePropertyName>false</PipelinePropertyName>
          <Positional>false</Positional>
          <Position>named</Position>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>La présence de ce paramètre évite une demande de confirmation si le fichier cible .ps1 existe déjà.</Description>
          <Globbing>false</Globbing>
        </ParameterDescription>
        <ParameterDescription>
          <Name>HideConsole</Name>
          <Type>SwitchParameter</Type>
          <AcceptsArray>false</AcceptsArray>
          <Mandatory>false</Mandatory>
          <Dynamic>false</Dynamic>
          <RemainingArgs>false</RemainingArgs>
          <Pipeline>false</Pipeline>
          <PipelinePropertyName>false</PipelinePropertyName>
          <Positional>false</Positional>
          <Position>named</Position>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Masque la console lors de l'appel à ShowDialog() du formulaire principal.</Description>
          <Globbing>false</Globbing>
        </ParameterDescription>
        <ParameterDescription>
          <Name>asFunction</Name>
          <Type>SwitchParameter</Type>
          <AcceptsArray>false</AcceptsArray>
          <Mandatory>false</Mandatory>
          <Dynamic>false</Dynamic>
          <RemainingArgs>false</RemainingArgs>
          <Pipeline>false</Pipeline>
          <PipelinePropertyName>false</PipelinePropertyName>
          <Positional>false</Positional>
          <Position>named</Position>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Le code du script généré est inséré dans une fonction.
Par défaut sont nom est 'GeneratePrimaryForm', si le paramètre -Secondary est précisé, alors le nom de la fonction est 'GenerateSecondaryForm'.</Description>
          <Globbing>false</Globbing>
        </ParameterDescription>
        <ParameterDescription>
          <Name>LiteralPath</Name>
          <Type>String</Type>
          <AcceptsArray>false</AcceptsArray>
          <Mandatory>true</Mandatory>
          <Dynamic>false</Dynamic>
          <RemainingArgs>false</RemainingArgs>
          <Pipeline>true</Pipeline>
          <PipelinePropertyName>false</PipelinePropertyName>
          <Positional>true</Positional>
          <Position>0</Position>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullOrEmptyAttribute</string>
          </Attributes>
          <Aliases>
            <string>PSPath</string>
          </Aliases>
          <Description>Spécifie le chemin d’accès d'un élément. Contrairement à Path, la valeur de LiteralPath est utilisée exactement telle que vous la tapez. Aucun caractère n’est interprété en tant que caractère générique. Si le chemin d’accès inclut des caractères d’échappement, mettez-le entre des guillemets simples. Les guillemets simples indiquent à Windows PowerShell qu’aucun caractère ne doit être interprété en tant que séquence d’échappement.</Description>
          <Globbing>false</Globbing>
        </ParameterDescription>
        <ParameterDescription>
          <Name>Secondary</Name>
          <Type>SwitchParameter</Type>
          <AcceptsArray>false</AcceptsArray>
          <Mandatory>false</Mandatory>
          <Dynamic>false</Dynamic>
          <RemainingArgs>false</RemainingArgs>
          <Pipeline>false</Pipeline>
          <PipelinePropertyName>false</PipelinePropertyName>
          <Positional>false</Positional>
          <Position>named</Position>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>La présence de ce paramètre génère un script d'un formulaire secondaire en évitant de dupliquer du code. 
C'est à dire qu'il utilisera une partie du code généré dans le formulaire principal.
Si le paramètre -AsFunction est précisé, alors le nom de la fonction sera 'GenerateSecondaryForm'.</Description>
          <Globbing>false</Globbing>
        </ParameterDescription>
        <ParameterDescription>
          <Name>Passthru</Name>
          <Type>SwitchParameter</Type>
          <AcceptsArray>false</AcceptsArray>
          <Mandatory>false</Mandatory>
          <Dynamic>false</Dynamic>
          <RemainingArgs>false</RemainingArgs>
          <Pipeline>false</Pipeline>
          <PipelinePropertyName>false</PipelinePropertyName>
          <Positional>false</Positional>
          <Position>named</Position>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Emet l'objet fichier correspondant au script .ps1 généré.</Description>
          <Globbing>false</Globbing>
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>$FormPath = "$Home\Mes documents\Visual Studio 2008\Projects\MyForms\MyForms\Form1.Designer.cs"
Convert-Form -Path $FormPath 
</Cmd>
          <Description>Converti le fichier Form1.Designer.cs en un script powershell "$Home\Mes documents\Visual Studio 2008\Projects\MyForms\MyForms\Form1.ps1"</Description>
        </Example>
        <Example>
          <Name>Example 2</Name>
          <Cmd>$FormPath = "$Home\Mes documents\Visual Studio 2008\Projects\MyForm\MyForm\Form1.Designer.cs"
md C:\Temp\MyForm
Convert-Form -Path $FormPath -Destination C:\Temp\MyForm -Force

</Cmd>
          <Description>Converti le fichier Form1.Designer.cs en un script powershell 'C:\Temp\MyForm\Form1.ps1'.
La présence du paramètre -Force écrase le fichier s'il existe déjà.</Description>
        </Example>
        <Example>
          <Name>Example 3</Name>
          <Cmd>$ScriptWinform=Convert-Form -LiteralPath 'ProjetPath\TestsWinform\Test21LiteralPath[AG]Naming\Frm[AG].Designer.cs' -DestinationLiteral C:\Temp\FormAG -Encoding unicode -passthru -Verbose</Cmd>
          <Description>Converti un fichier, dont le nom contient des jokers Powershell, en un script Powershell "C:\Temp\FormAG Frm[AG].ps1". L'usage des paramètres -LiteralPath et -DestinationLiteral sont ici nécessaire.

Le paramètre -Encoding encode en Unicode le fichier résultant. Par default chaque fichier est encodé en UTF8.

Le paramètre -Verbose détail les opérations.

Le paramètre -Passthru renvoie dans la variable $ScriptWinform l'objet fichier généré.</Description>
        </Example>
        <Example>
          <Name>Example 4</Name>
        </Example>
        <Example>
          <Name>Example 5</Name>
          <Cmd>Convert-Form Form1.Designer.cs -HideConsole </Cmd>
          <Description>Converti la form en lui ajoutant le code cachant la fenêtre de la console durant le temps d'exécution de la fenêtre.
On ajoute également l'appel au script APiWindows.ps1. todo</Description>
        </Example>
      </Examples>
      <RelatedLinks />
      <SupportInformation>
        <ADChecked>false</ADChecked>
        <RsatChecked>false</RsatChecked>
        <Ps2Checked>false</Ps2Checked>
        <Ps3Checked>false</Ps3Checked>
        <Ps4Checked>true</Ps4Checked>
        <WinXpChecked>false</WinXpChecked>
        <WinVistaChecked>false</WinVistaChecked>
        <Win7Checked>false</Win7Checked>
        <Win8Checked>false</Win8Checked>
        <Win81Checked>false</Win81Checked>
        <Win2003Checked>false</Win2003Checked>
        <Win2003StdChecked>false</Win2003StdChecked>
        <Win2003EEChecked>false</Win2003EEChecked>
        <Win2003DCChecked>false</Win2003DCChecked>
        <Win2008Checked>false</Win2008Checked>
        <Win2008StdChecked>false</Win2008StdChecked>
        <Win2008EEChecked>false</Win2008EEChecked>
        <Win2008DCChecked>false</Win2008DCChecked>
        <Win2008R2Checked>false</Win2008R2Checked>
        <Win2008R2StdChecked>false</Win2008R2StdChecked>
        <Win2008R2EEChecked>false</Win2008R2EEChecked>
        <Win2008R2DCChecked>false</Win2008R2DCChecked>
        <Win2012Checked>false</Win2012Checked>
        <Win2012StdChecked>false</Win2012StdChecked>
        <Win2012DCChecked>false</Win2012DCChecked>
        <Win2012R2Checked>false</Win2012R2Checked>
        <Win2012R2StdChecked>false</Win2012R2StdChecked>
        <Win2012R2DCChecked>false</Win2012R2DCChecked>
      </SupportInformation>
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject>
      <Name>Test-PSScript</Name>
      <Verb>Test</Verb>
      <Noun>PSScript</Noun>
      <GeneralHelp>
        <Synopsis>Valide la syntaxe d'un fichier powershell.</Synopsis>
        <Description>Valide la syntaxe d'un fichier powershell.</Description>
      </GeneralHelp>
      <Syntax>
        <string>Test-PSScript [-FilePath] &lt;String[]&gt; [-IncludeSummaryReport]</string>
      </Syntax>
      <Parameters>
        <ParameterDescription>
          <Name>FilePath</Name>
          <Type>String[]</Type>
          <AcceptsArray>true</AcceptsArray>
          <Mandatory>true</Mandatory>
          <Dynamic>false</Dynamic>
          <RemainingArgs>false</RemainingArgs>
          <Pipeline>true</Pipeline>
          <PipelinePropertyName>true</PipelinePropertyName>
          <Positional>true</Positional>
          <Position>0</Position>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ValidateNotNullOrEmptyAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>PSPath</string>
            <string>FullName</string>
          </Aliases>
          <Description>Spécifie le chemin d’accès d'un élément. La valeur de FilePath est utilisée exactement telle que vous la tapez. Aucun caractère n’est interprété en tant que caractère générique. Si le chemin d’accès inclut des caractères d’échappement, mettez-le entre des guillemets simples. Les guillemets simples indiquent à Windows PowerShell qu’aucun caractère ne doit être interprété en tant que séquence d’échappement.</Description>
          <Globbing>false</Globbing>
        </ParameterDescription>
        <ParameterDescription>
          <Name>IncludeSummaryReport</Name>
          <Type>SwitchParameter</Type>
          <AcceptsArray>false</AcceptsArray>
          <Mandatory>false</Mandatory>
          <Dynamic>false</Dynamic>
          <RemainingArgs>false</RemainingArgs>
          <Pipeline>false</Pipeline>
          <PipelinePropertyName>false</PipelinePropertyName>
          <Positional>false</Positional>
          <Position>named</Position>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Affiche un résultat sommaire des fichiers testés.</Description>
          <Globbing>false</Globbing>
        </ParameterDescription>
      </Parameters>
      <Examples />
      <RelatedLinks />
      <SupportInformation>
        <ADChecked>false</ADChecked>
        <RsatChecked>false</RsatChecked>
        <Ps2Checked>false</Ps2Checked>
        <Ps3Checked>false</Ps3Checked>
        <Ps4Checked>false</Ps4Checked>
        <WinXpChecked>false</WinXpChecked>
        <WinVistaChecked>false</WinVistaChecked>
        <Win7Checked>false</Win7Checked>
        <Win8Checked>false</Win8Checked>
        <Win81Checked>false</Win81Checked>
        <Win2003Checked>false</Win2003Checked>
        <Win2003StdChecked>false</Win2003StdChecked>
        <Win2003EEChecked>false</Win2003EEChecked>
        <Win2003DCChecked>false</Win2003DCChecked>
        <Win2008Checked>false</Win2008Checked>
        <Win2008StdChecked>false</Win2008StdChecked>
        <Win2008EEChecked>false</Win2008EEChecked>
        <Win2008DCChecked>false</Win2008DCChecked>
        <Win2008R2Checked>false</Win2008R2Checked>
        <Win2008R2StdChecked>false</Win2008R2StdChecked>
        <Win2008R2EEChecked>false</Win2008R2EEChecked>
        <Win2008R2DCChecked>false</Win2008R2DCChecked>
        <Win2012Checked>false</Win2012Checked>
        <Win2012StdChecked>false</Win2012StdChecked>
        <Win2012DCChecked>false</Win2012DCChecked>
        <Win2012R2Checked>false</Win2012R2Checked>
        <Win2012R2StdChecked>false</Win2012R2StdChecked>
        <Win2012R2DCChecked>false</Win2012R2DCChecked>
      </SupportInformation>
      <Publish>false</Publish>
    </CmdletObject>
  </Cmdlets>
</ModuleObject>